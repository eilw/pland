continue
params.fetch(:id)
params.fetch(:order)
params
continue
order
exit
Order.find(params.fetch(:format))
Order.find(params.fetch(:format)
params.fetch(:format)
params
continue
TransportType.find_by(type: transport_type)
valid_transport_type?
exit
transport_type.nil?
transport_type
continue
@order.complete?
@order.complete
@order
continue
items
item
items
continue
@order
continue
@order.complete
@order
order
continue
(total_volume >= 1 && !!transport_type)
(total_volume >= 1 && !transport_type)
(total_volume >= 1 && !!transport_type)
(total_volume >= 1 && transport_type)
total_volume
self.transport_type
continue
grade
continue
steel_params
exit
steel_params
continue
params[:steel_grade_id]
params['steel_grade_id']
SteelGrade.all
grade
params
exit
steel_params
continue
price_kg
continue
price_kg
continue
price_kg
continue
price_kg
exit
price_kg = Item.price_kg(steel)
steel = (params.fetch(:quote, nil) || params.fetch(:item, nil)).clone
steelvalues = ((params.fetch(:quote, nil) || params.fetch(:item, nil)).clone
steel = ((params.fetch(:quote, nil) || params.fetch(:item, nil)).clone
params.fetch(:item)
up = quote.clone
quote = params.fetch(:quote)
exit
params
exit
params
exit
steel_values
exit
steel_values
exit
TransportType.all
TransportTypes.all
TransportType.all
Item.all
transport
order
exit
TransportType.all
exit
order.transport_cost
order
exit
types
exit
SteelType.find(id)
SteelType.find_by(id: id)
SteelType.find_by_id(id)
id
item
types = SteelType.all
exit
params
exit
params
exit
params
exit
user
steel_type_id
price_kg
comment
user
exit
finish = SteelFinish.all
exit
steel2 = SteelType.find(3)
steel2 = SteelType.find(1)
steel2 = SteelType.find(2)
steel = SteelType.all
exit
SteelFinish.all.size
SteelFinish.find(100)
SteelFinish.find(3)
SteelFinish.find(2)
SteelFinish.find(1)
SteelFinish.get(1)
item.save
item
exit
width = SteelWidth.all
item
exit
mail.to
mail = UserMailer.request_approval_email(new_user)
UserMailer.request_approval_email(new_user)
new_user
mail
admin
exit
item
exit
item.save!
item.save
item
item.price_kg = 3
item
exit
Item.find(79)
Order.delete(order)
order.items
order
exit
a = Item.new()
item
